# Python CircleCI 2.0 configuration file
#
# Source: https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

references:
  py36_container_config: &py36_container_config
    working_directory: /tmp/circleci/buzzard
    docker:
      - image: $AWS_ECR_IMAGE_TAG_36
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

  py27_container_config: &py27_container_config
    working_directory: /tmp/circleci/buzzard
    docker:
      - image: $AWS_ECR_IMAGE_TAG_27
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - repo-v2-{{ .Branch }}-{{ .Revision }}
        - repo-v2-{{ .Branch }}
        - repo-v2-

  py36_requirements_cache_key: &py36_requirements_cache_key
    py36-dependencies-v6-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

  py36_requirements_backup_cache_key: &py36_requirements_backup_cache_key
    py36-dependencies-v6-

  py36_restore_dependencies: &py36_restore_dependencies
    restore_cache:
      keys:
        - *py36_requirements_cache_key
        # fallback to using the latest cache if no exact match is found
        - *py36_requirements_backup_cache_key

  py27_requirements_cache_key: &py27_requirements_cache_key
    py27-dependencies-v6-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

  py27_requirements_backup_cache_key: &py27_requirements_backup_cache_key
    py27-dependencies-v6-

  py27_restore_dependencies: &py27_restore_dependencies
    restore_cache:
      keys:
        - *py27_requirements_cache_key
        # fallback to using the latest cache if no exact match is found
        - *py27_requirements_backup_cache_key

  attach_workspace: &attach_workspace
    attach_workspace:
      # Must be absolute path or relative path from working_directory
      at: /tmp/circleci/

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: /tmp/circleci/
      paths:
        - .

jobs:
  init:
    <<: *py36_container_config
    steps:
      - *restore_repo
      - *py36_restore_dependencies
      - *py27_restore_dependencies
      - checkout
      - save_cache:
          key: repo-v2-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
      - *persist_to_workspace

  py36_dependencies:
    <<: *py36_container_config
    steps:
      - *attach_workspace
      - run:
          name: install dependencies
          command: |
            mkdir -p venvs/36
            python -m venv ./venvs/36
            . venvs/36/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
            pip install .
      - save_cache:
          key: *py36_requirements_cache_key
          paths:
            - ./venvs/36
      - *persist_to_workspace

  py36_lint:
    <<: *py36_container_config
    steps:
      - *attach_workspace
      - run:
          name: run linter
          command: |
            mkdir -p test-reports
            . venvs/36/bin/activate
            python --version
            pylint buzzard --output-format=json > test-reports/pylint.json || true
          when: always

  py36_test:
    <<: *py36_container_config
    parallelism: 4
    steps:
      - *attach_workspace
      # run tests!
      - run:
          name: run tests
          command: |
            . venvs/36/bin/activate
            circleci tests glob **/test/*.py | circleci tests split --split-by=timings --timings-type=filename | xargs python -m pytest --cov=buzzard --cov-report=term --cov-report=xml
            codecov

      - store_artifacts:
          path: test-reports
          destination: test-reports

  py27_dependencies:
    <<: *py27_container_config
    steps:
      - *attach_workspace
      - run:
          name: install dependencies
          # cp -s is a temporary bug fix for virtualenv not able to copy _gdal_array.so
          command: |
            pip install virtualenv
            mkdir -p venvs/27
            virtualenv venvs/27
            . venvs/27/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
            if [ ! -f venvs/27/lib/python2.7/site-packages/osgeo/_gdal_array.so ]; then cp /usr/local/gdal/lib/python2.7/site-packages/osgeo/_gdal_array.so venvs/27/lib/python2.7/site-packages/osgeo; fi
      - save_cache:
          key: *py27_requirements_cache_key
          paths:
            - ./venvs/27
      - *persist_to_workspace

  py27_test:
    <<: *py27_container_config
    parallelism: 4
    steps:
      - *attach_workspace
      # run tests!
      - run:
          name: run tests
          # -x option of pytest will stop tests after the first error
          # no coveralls for py27
          command: |
            . venvs/27/bin/activate
            pip install .
            circleci tests glob **/test/*.py | circleci tests split --split-by=timings --timings-type=filename | xargs python -m pytest -x

      - store_artifacts:
          path: test-reports
          destination: test-reports


workflows:
  version: 2
  buzzard:
    jobs:
      - init
      - py36_dependencies:
          requires:
            - init
      - py36_lint:
          requires:
            - init
            - py36_dependencies
      - py36_test:
          requires:
            - init
            - py36_dependencies
      - py27_dependencies:
          requires:
            - init
      - py27_test:
          requires:
            - init
            - py27_dependencies
